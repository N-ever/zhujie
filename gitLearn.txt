git init                        初始化
git add file                    添加到暂存区
git commit -m "注释"            提交
git log                         提交列表
git log --pretty=oneline        提交列表一行显示
git reset --hard hashcode       返回之前的状态删除之间的
git checkout -b dev hashcode    切换到另一dev分支，并返回到之前的状态
git checkout -- file            撤销工作区不同的操作暂存区覆盖工作区
git checkout :/"注释"           撤销到某个
git checkout master~5           撤销到主分支前5个
git diff                        到上次提交之间的修改
git diff "@{yesterday}"         和昨天相比修改的
git diff hashcode "master"      maseter和某个特定版本相比修改的
git whatchanged --since=“2 days ago” 查看从两天前到现在的版本
git revert HEAD                 撤销某一次提交这次提交的内容返回上一个版本
git merge dev                   合并分支
git branch -d dev               删除分支
git branch -m master dev        重命名master为dev
git branch master HEAD~1        以1次前提交一个新的master分支
git commit --amend              运行add 再运行提交一个新的文件
git commit --amend -a           增加更多到上次的提交
git diff >patch                 把生成的补丁放进patch
git apply <patch                把补丁patch 打上
git stash                       放入寄存区 
git stash list                  查看stash列表
git stash apply stash@{num}     提取stash
git stash pop                   提取最顶层的stash
git st .   git status 
git log  git lg
git branch  git br
git diff --cached               查看不同
git clone name@IP：～/file      克隆别人电脑的文件
cd                              直接到本地的home
CTRL+C                          取消指令
git fetch                       更新到本地
git merge                       合并
git pull                        更新到本地并合并
it push                         更新到远程
git add -u                      将所有修改过的文件放入
git add -A                      将删除或者新增的文件放入缓存区
-m                              提示说明
git config --global alias.xx xxxx 设置快捷
git config -e --global          编辑global
git config -e 
git config -e --system
git clone file1 file2           备份file1到file2
git dh                          工作区和HEAD做比较
git diff                        暂存区和工作区做比较
git dc                          暂存区和版本库的比较
git clean -fd                   清除不在暂存区的文件
git reset --hard master@{2}     重置master 两次改变之前的值
git reset -- filename  git reset HEAD filename git reset          git add 的反向操作 把文件撤出暂存区
git checkout branch -- filename branch中的提交中的filename 直接覆盖暂存区和工作区的文件
git clean                       删除没有git add 的文件和目录
-n 显示将要删除的文件和目录 -f 删除文件 -df 删除文件和目录
git tag 
git reset --soft hashcode
git rebase --onto C D F         没有D 
git add .....
git rebase --continue
git clone path path  --bare     裸库没有工作区
git clone --mirror path path    克隆
git pull = git fetch+git merge
git remote add name path (path)
git pull name branchname 
git tag -a V1.3 -m "版本1.3"    附注标签显示详细
git tag name hashcode           轻量标签

